program ::= statementList

statementList ::= statement+

block ::= "{" statementList "}"

statement ::= functionCall
            | assignment
            | conditionalStatement
            | loopStatement
            | functionDefinition
            | initialization
            | variableDeclaration

expression ::= binaryExpression
             | primary
             | unaryExpression
             | parenthesizedExpression

parenthesizedExpression ::= "(" expression ")" ";"

binaryExpression ::= primary binaryOperator primary ";"

binaryOperator ::= simpleMathOperator 
                 | comparator 
                 | booleanOperators

simpleMathOperator ::= "+" 
                     | "-" 
                     | "*" 
                     | "/" 
                     | "%"

unaryPostOperator ::= "++" 
                    | "--"

unaryPreOperator ::= "!" 
                   | "-"

booleanOperators ::= "&" 
                   | "|"

dataType ::= "String" 
           | "int" 
           | "float" 
           | "boolean" 
           | "char"

comparator ::= ">" | "<" | ">=" | "<=" | "==" | "!="

unaryExpression ::= primary unaryPostOperator ";"
                  | unaryPreOperator primary ";"

primary ::= NUMBER
          | STRING
          | IDENTIFIER
          | booleanLiteral
          | functionCall

assignment ::= IDENTIFIER "=" primary

conditionalStatement ::= "if" "(" expression ")" block

loopStatement ::= "while" "(" expression ")" block

variableDeclaration ::= dataType IDENTIFIER ";"

initialization ::= dataType variableName "=" primary ";"

functionCall ::= IDENTIFIER "(" parameter* ")" ";"
